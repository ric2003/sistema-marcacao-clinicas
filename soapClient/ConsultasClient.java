package default_package;

import java.util.Scanner;
import java.time.format.DateTimeFormatter;
import java.time.LocalDate;
import java.time.format.DateTimeParseException;
import org.apache.cxf.jaxws.JaxWsProxyFactoryBean;


public class ConsultasClient {
  
    public static void main(String[] args){
        
        JaxWsProxyFactoryBean factory = new JaxWsProxyFactoryBean();

        // Use the URL defined in the soap address portion of the WSDL
        factory.setAddress("http://localhost:8080/webServicecd01/services/ServiceUtilityPort"); 

        // Utilize the class which was auto-generated by Apache CXF wsdl2java
        factory.setServiceClass(ServiceUtility.class);

        Object client = factory.create();

        Scanner scanner = new Scanner(System.in);

        try {
        	//((ServiceUtility)client).deletarUsuarios();
            boolean autenticado = false;
            String utlilizadorAtual = null;
            int opcao = -1;
            while (true) {
                displayMenu(autenticado);

                opcao = -1;
                while (opcao == -1) {
                    System.out.print("Opção: ");
                    try {
                        opcao = Integer.parseInt(scanner.nextLine());
                    } catch (NumberFormatException e) {
                        System.err.println("Erro: A opção fornecida não é um número válido. Tente novamente.");
                    }
                }

                if (!autenticado) {
                    switch (opcao) {
                        case 1 -> {
                        	System.out.print("Utlilizador: ");
                            String utlilizador = scanner.nextLine();
                            System.out.print("Email: ");
                            String email = scanner.nextLine();
                            System.out.print("Numero de Telefone: ");
                            String numTelefone = scanner.nextLine();
                            System.out.print("Numero de Utente de saúde: ");
                            String numUtente = scanner.nextLine();
                            System.out.print("Senha: ");
                            String senha = scanner.nextLine();
                          
                            int response = ((ServiceUtility)client).registarUtilizador(utlilizador,email,numTelefone,numUtente, senha);
                            
                            if (response == 1) {
                                System.out.println("Registo realizado com sucesso!");
                            } else if (response == 0) {
                                System.out.println("Erro: O utilizador já existe.");
                            } else if (response == -1){
                            	System.out.println("Erro ao registrar usuário");
                            }else if (response == -2){
                            	System.out.println("não foi possível criar o ficheiro");
                            }else {
                                System.out.println("Erro: Ocorreu um problema ao tentar registar o utilizador.");
                            }
                       
                        }
                        case 2 -> {
                        	System.out.print("Email: ");
                            String email = scanner.nextLine();
                            System.out.print("Senha: ");
                            String senha = scanner.nextLine();
                            String authData = ((ServiceUtility)client).autenticarUtilizador(email, senha);
                            
                            if (authData != null && authData.trim() != "") {
                                autenticado = true;
                                utlilizadorAtual = authData;
                                System.out.println("Login bem-sucedido! Bem-vindo, " + authData);
                            }else {
                            	System.out.println("Falha no login, Por favor tente novamente.");
                            }
                            
                            
                        }
                        default -> System.out.println("Opção inválida.");
                    }
                } else {
                    switch (opcao) {
                        case 3 -> {
                        	boolean exitCase = false;
                            System.out.println("Digite 'menu' a qualquer momento para voltar ao menu principal.");
                            System.out.println("Selecione a clínica:");
                            
                            System.out.println("1. ClinicaA");
                            System.out.println("2. ClinicaB");
                            System.out.println("3. ClinicaC");
                            System.out.println("4. ClinicaD");
                            //System.out.println(((ServiceUtility)client).listaClinicas());
                      
                            String clinica = null;
                            while (clinica == null) {
                                System.out.print("Número da clínica: ");
                                String input = scanner.nextLine();
                                if (input.equalsIgnoreCase("menu")) {
                                	exitCase = true;
                                	break;
                                }
                              
                                clinica = ((ServiceUtility)client).selecionarClinica(Integer.parseInt(input));
                            }
                            if (exitCase) break;
                            System.out.print(((ServiceUtility)client).listaEspecialidades(clinica));
                            String especialidade = null;
                            while (especialidade == null) {
                                System.out.print("Número da especialidade: ");
                                String input = scanner.nextLine();
                                if (input.equalsIgnoreCase("menu")) {
                                	exitCase = true;
                                	break;
                                }
                                
                                especialidade = ((ServiceUtility)client).selecionarEspecialidade(clinica,Integer.parseInt(input));
                            }
                            if (exitCase) break;
                            System.out.print(((ServiceUtility)client).listaMedico(clinica, especialidade));
                            String medico = null;
                            while (medico == null) {
                                System.out.print("Número do médico: ");
                                String input = scanner.nextLine();
                                if (input.equalsIgnoreCase("menu")) {
                                	exitCase = true;
                                    break;
                                }
                                medico = ((ServiceUtility)client).selecionarMedico(clinica, especialidade,Integer.parseInt(input));
                            }
                            if (exitCase) break;
                            
                            LocalDate data = null;
                            String lista_horario = null;
                            while (data == null || lista_horario == null) {
                            	System.out.print("Digite a data (dd/mm/yyyy): ");
                                String input = scanner.nextLine();
                                if (input.equalsIgnoreCase("menu")) {
                                	exitCase = true;
                                	break;
                                }
                              
                                try {
                                    data = LocalDate.parse(input, DateTimeFormatter.ofPattern("dd/MM/yyyy"));
                                    
                                    lista_horario = ((ServiceUtility)client).listaHorario(clinica, especialidade, medico,
                                            (data).format(DateTimeFormatter.ofPattern("dd/MM/yyyy")));
                                    
                                    if (lista_horario != null && lista_horario.trim().equals("Nenhum horário disponível para a data selecionada.")) {
                                        System.out.println("Nenhum horário está disponível para a data selecionada.");
                                        lista_horario = null;
                                    }
                                } catch (DateTimeParseException e) {
                                    System.out.println("Data inválida. Certifique-se de usar o formato 'dd/mm/yyyy' e tente novamente.");
                                    data = null; // Reset `data` to null to signal invalid input
                                }
                             
                            }
                            if (exitCase) break;
                            System.out.print(lista_horario);
                            System.out.print("Digite o horário disponível (hh:mm): ");
                            String dataHora = null;
                            while (dataHora == null) {
                                String input = scanner.nextLine();
                                if (input.equalsIgnoreCase("menu")){
                                	exitCase = true;
                                	break;
                                }
                                // Call the modified method which now returns a String
                                dataHora = ((ServiceUtility) client).selecionarHorario(clinica, especialidade, medico,
                                        (data).format(DateTimeFormatter.ofPattern("dd/MM/yyyy")), input);
                            }
                            if (exitCase) break;
                            System.out.println("Consulta reservada com sucesso! ID: " + ((ServiceUtility)client).reservarConsulta(utlilizadorAtual, dataHora, clinica, especialidade, medico));     
                            
                        }

                        case 4 -> {
                        	System.out.println("Digite 'menu' para voltar ou 'AJUDA' para a lista de consultas.");
                            System.out.print("ID da consulta para cancelamento: ");
                            String idConsulta = scanner.nextLine().trim().toUpperCase();

                            if (idConsulta.equals("AJUDA")) {
                            	System.out.println(((ServiceUtility)client).listarConsultas(utlilizadorAtual));
                                System.out.print("Agora, insira o ID da consulta para cancelamento: ");
                                idConsulta = scanner.nextLine().trim().toUpperCase();
                            }
                            if (idConsulta.equalsIgnoreCase("menu"))
                                break;

                            int resultado = ((ServiceUtility)client).cancelarConsulta(utlilizadorAtual, idConsulta);
                            if (resultado == 1) {
                                System.out.println("Consulta cancelada com sucesso!");
                            } else {
                                System.out.println("Falha ao cancelar a consulta. Verifique se o ID da consulta está correto.");
                            }

                        }
                        case 5 -> System.out.println(((ServiceUtility)client).listarConsultas(utlilizadorAtual));
                        case 6 -> {
                            System.out.println("Sessão encerrada.");
                            autenticado = false;
                            utlilizadorAtual = null;
                        }
                        default -> System.out.println("Opção inválida.");
                    }
                }
            }
        }finally {
            scanner.close();
        }
    }

    public static void displayMenu(boolean autenticado) {
        System.out.println("\nEscolha uma opção:");
        if (!autenticado) {
            System.out.println("1. Registrar Utlilizador");
            System.out.println("2. Autenticar");
        } else {
            System.out.println("3. Reservar consulta");
            System.out.println("4. Cancelar consulta");
            System.out.println("5. Listar consultas");
            System.out.println("6. Sair");
        }
    }


}